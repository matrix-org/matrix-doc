# Copyright 2018 New Vector Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

swagger: '2.0'
info:
  title: "Matrix Federation Events API"
  version: "1.0.0"
host: localhost:8448
schemes:
  - https
basePath: /_matrix/federation/v1
produces:
  - application/json
paths:
  "/state/{roomId}":
    get:
      summary: Get all the state of a given room
      description: |-
        Retrieves a snapshot of a room's state at a given event.
      operationId: getRoomState
      parameters:
        - in: path
          name: roomId
          type: string
          description: The room ID to get state for.
          required: true
          x-example: "!abc123:matrix.org"
        - in: query
          name: event_id
          type: string
          description: An event ID in the room to retrieve the state at.
          required: true
          x-example: "$helloworld:matrix.org"
      responses:
        200:
          description: |-
            The fully resolved state for the room, including the authorization
            chain for the events.
          schema:
            type: object
            properties:
              auth_chain:
                type: array
                description: |-
                  The full set of authorization events that make up the state
                  of the room, and their authorization events, recursively.
                items:
                  $ref: "definitions/pdu.yaml"
                example: [{"$ref": "examples/pdu.json"}]
              pdus:
                type: array
                description: |-
                  The fully resolved state of the room at the given event.
                items:
                  $ref: "definitions/pdu.yaml"
                example: [{"$ref": "examples/pdu.json"}]
            required: ['auth_chain', 'pdus']
  "/state_ids/{roomId}":
    get:
      summary: Get all the state event IDs of a given room
      description: |-
        Retrieves a snapshot of a room's state at a given event, in the form of
        event IDs. This performs the same function as calling ``/state/{roomId}``,
        however this returns just the event IDs rather than the full events.
      operationId: getRoomStateIds
      parameters:
        - in: path
          name: roomId
          type: string
          description: The room ID to get state for.
          required: true
          x-example: "!abc123:matrix.org"
        - in: query
          name: event_id
          type: string
          description: An event ID in the room to retrieve the state at.
          required: true
          x-example: "$helloworld:matrix.org"
      responses:
        200:
          description: |-
            The fully resolved state for the room, including the authorization
            chain for the events.
          schema:
            type: object
            properties:
              auth_chain_ids:
                type: array
                description: |-
                  The full set of authorization events that make up the state
                  of the room, and their authorization events, recursively.
                items:
                  type: string
                example: ["$an_event:domain.com"]
              pdu_ids:
                type: array
                description: |-
                  The fully resolved state of the room at the given event.
                items:
                  type: string
                example: ["$an_event:domain.com"]
            required: ['auth_chain_ids', 'pdu_ids']
  "/event/{eventId}":
    get:
      summary: Get a single event
      description: |-
        Retrieves a single event.
      operationId: getEvent
      parameters:
        - in: path
          name: eventId
          type: string
          description: The event ID to get.
          required: true
          x-example: "$abc123:matrix.org"
      responses:
        200:
          description: A transaction containing a single PDU which is the event requested.
          schema:
            $ref: "definitions/transaction.yaml"
  "/backfill/{roomId}":
    get:
      summary: Retrieves the events which precede the given event
      description: |-
        Retreives a sliding-window history of previous PDUs that occurred in the given room.
        Starting from the PDU ID(s) given in the ``v`` argument, the PDUs that preceded it
        are retrieved, up to the total number given by the ``limit``.
      operationId: backfillRoom
      parameters:
        - in: path
          name: roomId
          type: string
          description: The room ID to backfill.
          required: true
          x-example: "!abc123:matrix.org"
        - in: query
          name: v
          type: string # TODO: The description says this is plural - figure out how to specify multiple, and spec it
          description: The event ID to backfill from.
          required: true
          x-example: "$abc123:matrix.org"
        - in: query
          name: limit
          type: integer
          description: The maximum number of events to retrieve.
          required: true
          x-example: 10
      responses:
        200:
          description: A transaction containing the PDUs that preceded the given event(s).
          schema:
            $ref: "definitions/transaction.yaml"
